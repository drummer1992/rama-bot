'use strict'

const assert = require('assert')
const timer = require('../utils/timer')
const reminding = require('./reminding')

const hourMessage = group => `–ì—Ä—É–ø–∞: ${group} —É –≤–∞—Å —Ç—Ä—î–Ω—è üí™ —á–µ—Ä–µ–∑ –≥–æ–¥–∏–Ω–∏ ‚è∞, –≥–æ—Å—Ç—Ä—ñ—Ç—å –ª–∏–∂—ñ ‚õ∑ —ñ –Ω–µ –∑–∞–±—É–≤–∞–π—Ç–µ –≤–æ–¥–∏—á–∫—É üíß`
const trainingStartMessage = group => `–ì—Ä—É–ø–∞: ${group} –£–¥–∞—á–Ω–æ—ó —Ç—Ä—î–Ω—ñ üí™, —ñ –ø–∞–º—è—Ç–∞–π—Ç–µ, –±–∞–≥–∞—Ç–æ –±—É—Ä–ø—î–π –Ω–µ –±—É–≤–∞—î üòú`

const getTime = (hours, minutes) => {
  if (hours && minutes) {
    const date = new Date()

    date.setHours(hours)
    date.setMinutes(minutes)

    return date
  }
}

module.exports = async (msg, match) => {
  const trainer = await User.findOne({ id: msg.from.id })

  const group = match[1]

  const [hours = 19, minutes = 30] = (match[2] || '').split(':').map(Number)

  const dateNow = new Date()

  const invalidTimeMessage = `–ö–æ–ª–∏ —Ü–µ —Ç–∏ –∑—ñ–±—Ä–∞–≤—Å—è —Ç—Ä–µ–Ω—É–≤–∞—Ç–∏—Å—å? ${match[2]} ü§£`

  assert(dateNow.getHours() <= hours, invalidTimeMessage)
  assert(dateNow.getMinutes() <= minutes, invalidTimeMessage)

  trainer.group = group

  await trainer.save()

  const users = await User.find({ group })

  const date = getTime(hours, minutes)

  await Training.create({
    trainer,
    users,
    group,
    date,
  })

  let message = '–ó–¥–æ—Ä–æ–≤ –±–∞–Ω–¥—ñ—Ç–∏!\n' +
    `${msg.username} üí™üí™üí™ –∑–∞–∑–∏–≤–∞—î –Ω–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –≥—Ä—É–ø—É: ${group} üòÄ\n` +
    `–°—å–æ–≥–æ–¥–Ω—ñ –≤ ${match[2]} ‚è∞\n`

  if (users.length) {
    message += `–í –≥—Ä—É–ø—É ${group} –≤—Ö–æ–¥—è—Ç—å:\n` +
      users.map(user => user.username && `@${user.username}`)
        .filter(Boolean)
        .join('\n')

    if (hours - 1 !== dateNow.getHours()) {
      timer({ hours: hours - 1, minutes })(interval => reminding(interval, msg.chat.id, hourMessage(group)))
    }

    timer({ hours: hours, minutes })(interval => reminding(interval, msg.chat.id, trainingStartMessage(group)))
  }

  message += '\n\n–ü–æ—Å—Ç–∞–≤ ‚ûï —è–∫—â–æ –ø—Ä–∏–π–¥–µ—à, –∞–±–æ ‚ûñ —Ä–∞–∑ –ø–∞–¥–∞—î—à –Ω–∞ –º–æ—Ä–æ–∑ üí©'

  return Bot.sendMessage(msg.chat.id, message)
}